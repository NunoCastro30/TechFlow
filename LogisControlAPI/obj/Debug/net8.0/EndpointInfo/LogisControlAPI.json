{
  "openapi": "3.0.1",
  "info": {
    "title": "LogisControlAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/AssistenciaExterna/ObterAssistencias": {
      "get": {
        "tags": [
          "AssistenciaExterna"
        ],
        "summary": "Obtém a lista de todas as assistências externas registadas.",
        "responses": {
          "200": {
            "description": "Retorna a lista com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssistenciaExternaDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssistenciaExternaDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssistenciaExternaDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter as assistências."
          }
        }
      }
    },
    "/api/AssistenciaExterna/ObterAssistencia/{id}": {
      "get": {
        "tags": [
          "AssistenciaExterna"
        ],
        "summary": "Obtém uma assistência externa pelo seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único da assistência.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assistência encontrada com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AssistenciaExternaDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistenciaExternaDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistenciaExternaDTO"
                }
              }
            }
          },
          "404": {
            "description": "Assistência não encontrada."
          },
          "500": {
            "description": "Erro interno ao procurar a assistência."
          }
        }
      }
    },
    "/api/AssistenciaExterna/CriarAssistencia": {
      "post": {
        "tags": [
          "AssistenciaExterna"
        ],
        "summary": "Cria uma nova assistência externa.",
        "requestBody": {
          "description": "Dados para criação da assistência.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistenciaExternaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistenciaExternaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistenciaExternaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Assistência criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou duplicados."
          },
          "500": {
            "description": "Erro interno ao criar a assistência."
          }
        }
      }
    },
    "/api/AssistenciaExterna/AtualizarAssistencia/{assistenteId}": {
      "put": {
        "tags": [
          "AssistenciaExterna"
        ],
        "summary": "Atualiza os dados de uma assistência externa existente.",
        "parameters": [
          {
            "name": "assistenteId",
            "in": "path",
            "description": "ID da assistência a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados da assistência.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistenciaExternaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistenciaExternaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistenciaExternaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assistência atualizada com sucesso."
          },
          "404": {
            "description": "Assistência não encontrada."
          },
          "400": {
            "description": "NIF duplicado ou dados inválidos."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar a assistência."
          }
        }
      }
    },
    "/api/Cliente/ObterClientes": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtém a lista de todos os clientes registados.",
        "responses": {
          "200": {
            "description": "Retorna a lista de clientes com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os clientes."
          }
        }
      }
    },
    "/api/Cliente/ObterCliente/{nif}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtém um cliente pelo seu NIF.",
        "parameters": [
          {
            "name": "nif",
            "in": "path",
            "description": "Número de Identificação Fiscal (NIF) do cliente.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteDTO"
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar o cliente."
          }
        }
      }
    },
    "/api/Cliente/CriarCliente": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cria um novo cliente.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarClienteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarClienteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarClienteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Cliente criado com sucesso."
          },
          "500": {
            "description": "Erro interno ao criar o pedido de compra."
          }
        }
      }
    },
    "/api/Cliente/AtualizarCliente/{clienteId}": {
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Atualiza os dados de um cliente existente.",
        "parameters": [
          {
            "name": "clienteId",
            "in": "path",
            "description": "ID do cliente a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do cliente.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarClienteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarClienteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarClienteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso."
          },
          "404": {
            "description": "Cliente não encontrado."
          },
          "400": {
            "description": "NIF duplicado ou dados inválidos."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o cliente."
          }
        }
      }
    },
    "/api/EncomendaCliente/ListarEncomendas": {
      "get": {
        "tags": [
          "EncomendaCliente"
        ],
        "summary": "Lista encomendas",
        "responses": {
          "200": {
            "description": "Lista obtida com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaClienteDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaClienteDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaClienteDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter encomendas."
          }
        }
      }
    },
    "/api/EncomendaCliente/AtualizarEstado/{id}": {
      "put": {
        "tags": [
          "EncomendaCliente"
        ],
        "summary": "Atualiza manualmente o estado de uma encomenda.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da encomenda a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Novo estado da encomenda.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarEstadoEncomendaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarEstadoEncomendaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarEstadoEncomendaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado atualizado com sucesso."
          },
          "404": {
            "description": "Encomenda não encontrada."
          },
          "500": {
            "description": "Erro interno ao atualizar o estado."
          }
        }
      }
    },
    "/api/EncomendaItens/ObterEncomendaItens": {
      "get": {
        "tags": [
          "EncomendaItens"
        ],
        "summary": "Obtém a lista de todos os itens de encomenda registados.",
        "responses": {
          "200": {
            "description": "Retorna a lista com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaItensDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaItensDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaItensDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os itens."
          }
        }
      }
    },
    "/api/EncomendaItens/ObterEncomendaItem/{id}": {
      "get": {
        "tags": [
          "EncomendaItens"
        ],
        "summary": "Obtém um item de encomenda pelo seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do item.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item encontrado com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EncomendaItensDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncomendaItensDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncomendaItensDTO"
                }
              }
            }
          },
          "404": {
            "description": "Item não encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar o item."
          }
        }
      }
    },
    "/api/EncomendaItens/CriarEncomendaItem": {
      "post": {
        "tags": [
          "EncomendaItens"
        ],
        "summary": "Cria um novo item de encomenda.",
        "requestBody": {
          "description": "Dados para criação do item.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncomendaItensDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EncomendaItensDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EncomendaItensDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Item de encomenda criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "500": {
            "description": "Erro interno ao criar o item."
          }
        }
      }
    },
    "/api/EncomendaItens/AtualizarEncomendaItem/{itemId}": {
      "put": {
        "tags": [
          "EncomendaItens"
        ],
        "summary": "Atualiza os dados de um item de encomenda existente.",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "ID do item a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do item.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncomendaItensDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EncomendaItensDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EncomendaItensDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item atualizado com sucesso."
          },
          "404": {
            "description": "Item não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o item."
          }
        }
      }
    },
    "/api/Fornecedor/ObterFornecedores": {
      "get": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Obtém a lista de todos os fornecedores registados.",
        "responses": {
          "200": {
            "description": "Retorna a lista de fornecedores com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os fornecedores."
          }
        }
      }
    },
    "/api/Fornecedor/ObterFornecedorPorNome/{nome}": {
      "get": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Obtém fornecedores pelo nome (pesquisa parcial ou total).",
        "parameters": [
          {
            "name": "nome",
            "in": "path",
            "description": "Nome ou parte do nome do fornecedor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedores encontrados com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum fornecedor encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar fornecedores."
          }
        }
      }
    },
    "/api/Fornecedor/CriarFornecedor": {
      "post": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Cria um novo fornecedor na base de dados.",
        "requestBody": {
          "description": "Objeto com os dados do fornecedor a criar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarFornecedorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarFornecedorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarFornecedorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Fornecedor criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "500": {
            "description": "Erro interno ao tentar criar o fornecedor."
          }
        }
      }
    },
    "/api/Fornecedor/AtualizarFornecedor/{fornecedorId}": {
      "put": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Atualiza os dados de um fornecedor existente.",
        "parameters": [
          {
            "name": "fornecedorId",
            "in": "path",
            "description": "ID do fornecedor a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do fornecedor.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarFornecedorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarFornecedorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarFornecedorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fornecedor atualizado com sucesso."
          },
          "404": {
            "description": "Fornecedor não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o fornecedor."
          }
        }
      }
    },
    "/api/Maquina/ObterMaquinas": {
      "get": {
        "tags": [
          "Maquina"
        ],
        "summary": "Obtém a lista de todas as máquinas registadas.",
        "responses": {
          "200": {
            "description": "Retorna a lista de máquinas com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaquinaDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaquinaDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaquinaDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter as máquinas."
          }
        }
      }
    },
    "/api/Maquina/ObterMaquina/{id}": {
      "get": {
        "tags": [
          "Maquina"
        ],
        "summary": "Obtém uma máquina pelo seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único da máquina.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Máquina encontrada com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MaquinaDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaquinaDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaquinaDTO"
                }
              }
            }
          },
          "404": {
            "description": "Máquina não encontrada."
          },
          "500": {
            "description": "Erro interno ao procurar a máquina."
          }
        }
      }
    },
    "/api/Maquina/CriarMaquina": {
      "post": {
        "tags": [
          "Maquina"
        ],
        "summary": "Cria uma nova máquina.",
        "requestBody": {
          "description": "Dados para criação da máquina.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaquinaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MaquinaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MaquinaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Máquina criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou duplicados."
          },
          "500": {
            "description": "Erro interno ao criar a máquina."
          }
        }
      }
    },
    "/api/Maquina/AtualizarMaquina/{maquinaId}": {
      "put": {
        "tags": [
          "Maquina"
        ],
        "summary": "Atualiza os dados de uma máquina existente.",
        "parameters": [
          {
            "name": "maquinaId",
            "in": "path",
            "description": "ID da máquina a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados da máquina.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaquinaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MaquinaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MaquinaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Máquina atualizada com sucesso."
          },
          "404": {
            "description": "Máquina não encontrada."
          },
          "400": {
            "description": "Dados inválidos ou duplicados."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar a máquina."
          }
        }
      }
    },
    "/api/MateriaPrima": {
      "get": {
        "tags": [
          "MateriaPrima"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MateriaPrimaDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MateriaPrimaDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MateriaPrimaDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MateriaPrima"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/MateriaPrima/{id}": {
      "get": {
        "tags": [
          "MateriaPrima"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MateriaPrima"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "MateriaPrima"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MateriaPrimaProduto": {
      "get": {
        "tags": [
          "MateriaPrimaProduto"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MateriaPrimaProduto"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/MateriaPrimaProduto/{id}": {
      "get": {
        "tags": [
          "MateriaPrimaProduto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MateriaPrimaProduto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MateriaPrimaProdutoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "MateriaPrimaProduto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/OrdemProducao": {
      "get": {
        "tags": [
          "OrdemProducao"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdemProducaoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdemProducaoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdemProducaoDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OrdemProducao"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdemProducaoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdemProducaoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdemProducaoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrdemProducaoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdemProducaoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdemProducaoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/OrdemProducao/{id}": {
      "get": {
        "tags": [
          "OrdemProducao"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrdemProducaoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdemProducaoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdemProducaoDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OrdemProducao"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdemProducaoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdemProducaoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdemProducaoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "OrdemProducao"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PedidoCompra/CriarPedidoCompra": {
      "post": {
        "tags": [
          "PedidoCompra"
        ],
        "summary": "Cria um novo pedido de compra.",
        "requestBody": {
          "description": "Dados para criação do pedido.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoCompraDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoCompraDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoCompraDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Pedido de compra criado com sucesso."
          },
          "400": {
            "description": "Utilizador não encontrado ou dados inválidos."
          },
          "500": {
            "description": "Erro interno ao criar o pedido de compra."
          }
        }
      }
    },
    "/api/PedidoCompra/ListarPedidoCompra": {
      "get": {
        "tags": [
          "PedidoCompra"
        ],
        "summary": "Lista todos os pedidos de compra com o nome do utilizador associado.",
        "responses": {
          "200": {
            "description": "Lista obtida com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedidoCompraDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedidoCompraDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedidoCompraDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter os pedidos."
          }
        }
      }
    },
    "/api/PedidoCompra/AtualizarEstado/{pedidoId}": {
      "put": {
        "tags": [
          "PedidoCompra"
        ],
        "summary": "Atualiza o estado de um pedido de compra. Se o estado for \"Concluído\", define também a data de conclusão.",
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "description": "ID do pedido a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Novo estado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarEstadoPedidoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarEstadoPedidoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarEstadoPedidoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado atualizado com sucesso."
          },
          "404": {
            "description": "Pedido de compra não encontrado."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "500": {
            "description": "Erro interno ao atualizar o estado."
          }
        }
      }
    },
    "/api/PedidoCompra/AtualizarDescricao/{pedidoId}": {
      "put": {
        "tags": [
          "PedidoCompra"
        ],
        "summary": "Atualiza a descrição de um pedido de compra.",
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "description": "ID do pedido.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Nova descrição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarDescricaoPedidoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarDescricaoPedidoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarDescricaoPedidoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Descrição atualizada com sucesso."
          },
          "404": {
            "description": "Pedido não encontrado."
          },
          "500": {
            "description": "Erro interno."
          }
        }
      }
    },
    "/api/PedidoManutencao/ObterPedidos": {
      "get": {
        "tags": [
          "PedidoManutencao"
        ],
        "summary": "Obtém a lista de todos os pedidos de manutenção registados.",
        "responses": {
          "200": {
            "description": "Retorna a lista de pedidos com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedidoManutençãoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedidoManutençãoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedidoManutençãoDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os pedidos."
          }
        }
      }
    },
    "/api/PedidoManutencao/ObterPedido/{id}": {
      "get": {
        "tags": [
          "PedidoManutencao"
        ],
        "summary": "Obtém um pedido de manutenção pelo seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do pedido.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido encontrado com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PedidoManutençãoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PedidoManutençãoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PedidoManutençãoDTO"
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar o pedido."
          }
        }
      }
    },
    "/api/PedidoManutencao/CriarPedido": {
      "post": {
        "tags": [
          "PedidoManutencao"
        ],
        "summary": "Cria um novo pedido de manutenção.",
        "requestBody": {
          "description": "Dados para criação do pedido.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoManutençãoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoManutençãoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoManutençãoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Pedido de manutenção criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "500": {
            "description": "Erro interno ao criar o pedido."
          }
        }
      }
    },
    "/api/PedidoManutencao/AtualizarPedido/{pedidoId}": {
      "put": {
        "tags": [
          "PedidoManutencao"
        ],
        "summary": "Atualiza os dados de um pedido de manutenção existente.",
        "parameters": [
          {
            "name": "pedidoId",
            "in": "path",
            "description": "ID do pedido a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do pedido.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoManutençãoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoManutençãoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoManutençãoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido atualizado com sucesso."
          },
          "404": {
            "description": "Pedido não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o pedido."
          }
        }
      }
    },
    "/api/ProdMateriais/AtualizarQuantidade/{id}": {
      "put": {
        "tags": [
          "ProdMateriais"
        ],
        "summary": "Atualiza a quantidade utilizada de uma matéria-prima numa ordem de produção.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do registo ProdMateriais.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Nova quantidade a atualizar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProdMaterialDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProdMaterialDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProdMaterialDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quantidade atualizada com sucesso."
          },
          "404": {
            "description": "Registo não encontrado."
          },
          "500": {
            "description": "Erro interno ao atualizar o registo."
          }
        }
      }
    },
    "/api/Produto": {
      "get": {
        "tags": [
          "Produto"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProdutoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProdutoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProdutoDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Produto"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProdutoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProdutoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProdutoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProdutoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProdutoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProdutoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Produto/{id}": {
      "get": {
        "tags": [
          "Produto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProdutoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProdutoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProdutoDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Produto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProdutoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProdutoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProdutoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Produto"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/RegistoManutencao/ObterRegistos": {
      "get": {
        "tags": [
          "RegistoManutencao"
        ],
        "summary": "Obtém a lista de todos os registos de manutenção.",
        "responses": {
          "200": {
            "description": "Retorna a lista de registos com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistoManutencaoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistoManutencaoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistoManutencaoDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os registos."
          }
        }
      }
    },
    "/api/RegistoManutencao/ObterRegisto/{id}": {
      "get": {
        "tags": [
          "RegistoManutencao"
        ],
        "summary": "Obtém um registo de manutenção pelo seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único do registo.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registo encontrado com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoManutencaoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoManutencaoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoManutencaoDTO"
                }
              }
            }
          },
          "404": {
            "description": "Registo não encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar o registo."
          }
        }
      }
    },
    "/api/RegistoManutencao/CriarRegisto": {
      "post": {
        "tags": [
          "RegistoManutencao"
        ],
        "summary": "Cria um novo registo de manutenção.",
        "requestBody": {
          "description": "Dados para criação do registo.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoManutencaoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoManutencaoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoManutencaoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Registo criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "500": {
            "description": "Erro interno ao criar o registo."
          }
        }
      }
    },
    "/api/RegistoManutencao/AtualizarRegisto/{registoId}": {
      "put": {
        "tags": [
          "RegistoManutencao"
        ],
        "summary": "Atualiza os dados de um registo de manutenção existente.",
        "parameters": [
          {
            "name": "registoId",
            "in": "path",
            "description": "ID do registo a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do registo.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoManutencaoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoManutencaoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoManutencaoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registo atualizado com sucesso."
          },
          "404": {
            "description": "Registo não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o registo."
          }
        }
      }
    },
    "/api/RegistoProducao": {
      "get": {
        "tags": [
          "RegistoProducao"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistoProducaoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistoProducaoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistoProducaoDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RegistoProducao"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoProducaoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoProducaoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoProducaoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoProducaoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoProducaoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoProducaoDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistoProducao/{id}": {
      "get": {
        "tags": [
          "RegistoProducao"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoProducaoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoProducaoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistoProducaoDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RegistoProducao"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoProducaoDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoProducaoDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistoProducaoDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "RegistoProducao"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Teste/ping": {
      "get": {
        "tags": [
          "Teste"
        ],
        "summary": "Endpoint para testar a conexão ao SQL Server.",
        "responses": {
          "200": {
            "description": "Conexão bem-sucedida com a BD."
          },
          "500": {
            "description": "Erro ao tentar conectar a BD."
          }
        }
      }
    },
    "/api/Utilizador/ObterUtilizadores": {
      "get": {
        "tags": [
          "Utilizador"
        ],
        "summary": "Obtém a lista de todos os utilizadores registados.",
        "responses": {
          "200": {
            "description": "Lista de utilizadores obtida com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilizadorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Utilizador/CriarUtilizador": {
      "post": {
        "tags": [
          "Utilizador"
        ],
        "summary": "Cria um novo utilizador com os dados fornecidos.",
        "requestBody": {
          "description": "Dados do novo utilizador.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarUtilizadorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarUtilizadorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarUtilizadorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Utilizador criado com sucesso."
          },
          "400": {
            "description": "Número de funcionário já existe."
          },
          "500": {
            "description": "Erro interno ao criar o utilizador."
          }
        }
      }
    },
    "/api/Utilizador/AtualizarPerfil/{id}": {
      "put": {
        "tags": [
          "Utilizador"
        ],
        "summary": "Atualiza o perfil do utilizador: primeiro nome, sobrenome e/ou password.\r\nApenas os campos preenchidos serão atualizados. A password é guardada com hash.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do utilizador a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados a atualizar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarPerfilUtilizadorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarPerfilUtilizadorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarPerfilUtilizadorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Perfil atualizado com sucesso."
          },
          "404": {
            "description": "Utilizador não encontrado."
          },
          "500": {
            "description": "Erro interno ao atualizar o perfil."
          }
        }
      }
    },
    "/api/Utilizador/AtualizarEstadoRole/{id}": {
      "put": {
        "tags": [
          "Utilizador"
        ],
        "summary": "Atualiza o estado e o perfil (role) de um utilizador. Apenas usado por administradores.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do utilizador a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Novo role e estado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtilizadorUpdateAdminDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UtilizadorUpdateAdminDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UtilizadorUpdateAdminDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Utilizador atualizado com sucesso."
          },
          "404": {
            "description": "Utilizador não encontrado."
          },
          "500": {
            "description": "Erro interno ao atualizar o utilizador."
          }
        }
      }
    },
    "/api/Utilizador/login": {
      "post": {
        "tags": [
          "Utilizador"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AssistenciaExternaDTO": {
        "type": "object",
        "properties": {
          "assistenteId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "nif": {
            "type": "integer",
            "format": "int32"
          },
          "morada": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AtualizarClienteDTO": {
        "required": [
          "morada",
          "nif",
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          },
          "nif": {
            "type": "integer",
            "format": "int32"
          },
          "morada": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "DTO para atualização de dados de um cliente."
      },
      "AtualizarDescricaoPedidoDTO": {
        "type": "object",
        "properties": {
          "novaDescricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AtualizarEstadoEncomendaDTO": {
        "type": "object",
        "properties": {
          "estado": {
            "type": "string",
            "description": "Novo estado da encomenda.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para atualizar o estado de uma encomenda."
      },
      "AtualizarEstadoPedidoDTO": {
        "type": "object",
        "properties": {
          "estado": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AtualizarFornecedorDTO": {
        "required": [
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          },
          "telefone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para atualizar os dados de um fornecedor existente."
      },
      "AtualizarPerfilUtilizadorDTO": {
        "type": "object",
        "properties": {
          "primeiroNome": {
            "type": "string",
            "nullable": true
          },
          "sobrenome": {
            "type": "string",
            "nullable": true
          },
          "novaPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO para atualizar o perfil do utilizador (dados pessoais + password)."
      },
      "ClienteDTO": {
        "type": "object",
        "properties": {
          "clienteId": {
            "type": "integer",
            "description": "Identificador único do cliente.",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "description": "Nome do cliente.",
            "nullable": true
          },
          "nif": {
            "type": "integer",
            "description": "Número de Identificação Fiscal (NIF) do cliente.",
            "format": "int32"
          },
          "morada": {
            "type": "string",
            "description": "Morada completa do cliente.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO que representa um cliente, contendo apenas informações essenciais e não sensíveis."
      },
      "CriarClienteDTO": {
        "required": [
          "morada",
          "nif",
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string",
            "description": "Nome do cliente."
          },
          "nif": {
            "type": "integer",
            "description": "Número de Identificação Fiscal do cliente.",
            "format": "int32"
          },
          "morada": {
            "minLength": 1,
            "type": "string",
            "description": "Morada do cliente."
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo cliente."
      },
      "CriarFornecedorDTO": {
        "required": [
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          },
          "telefone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo fornecedor."
      },
      "CriarPedidoCompraDTO": {
        "required": [
          "descricao",
          "utilizadorId"
        ],
        "type": "object",
        "properties": {
          "descricao": {
            "minLength": 1,
            "type": "string",
            "description": "Descrição do pedido de compra."
          },
          "utilizadorId": {
            "type": "integer",
            "description": "ID do utilizador que está a criar o pedido.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo pedido de compra."
      },
      "CriarUtilizadorDTO": {
        "required": [
          "numFuncionario",
          "password",
          "primeiroNome",
          "role",
          "sobrenome"
        ],
        "type": "object",
        "properties": {
          "primeiroNome": {
            "minLength": 1,
            "type": "string",
            "description": "Primeiro nome do utilizador."
          },
          "sobrenome": {
            "minLength": 1,
            "type": "string",
            "description": "Sobrenome ou apelido do utilizador."
          },
          "numFuncionario": {
            "type": "integer",
            "description": "Número único do funcionário (identificador interno).",
            "format": "int32"
          },
          "password": {
            "maxLength": 8,
            "minLength": 3,
            "type": "string",
            "description": "Palavra-passe do utilizador. Deve ter entre 3 e 8 caracteres."
          },
          "role": {
            "minLength": 1,
            "type": "string",
            "description": "Função atribuída ao utilizador (ex: Administrador, Operador, etc.)."
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo utilizador, contendo apenas os dados necessários para o registo."
      },
      "EncomendaClienteDTO": {
        "type": "object",
        "properties": {
          "encomendaClienteId": {
            "type": "integer",
            "format": "int32"
          },
          "dataEncomenda": {
            "type": "string",
            "format": "date-time"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "nomeCliente": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO para leitura de encomendas com nome do cliente."
      },
      "EncomendaItensDTO": {
        "type": "object",
        "properties": {
          "encomendaItensId": {
            "type": "integer",
            "format": "int32"
          },
          "quantidade": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "encomendaClienteEncomendaClienteId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FornecedorDTO": {
        "type": "object",
        "properties": {
          "fornecedorId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO que representa um fornecedor para listagem/leitura."
      },
      "LoginDTO": {
        "required": [
          "numFuncionario",
          "password"
        ],
        "type": "object",
        "properties": {
          "numFuncionario": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MaquinaDTO": {
        "type": "object",
        "properties": {
          "maquinaId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "linhaProd": {
            "type": "integer",
            "format": "int32"
          },
          "assistenciaExternaAssistenteId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MateriaPrimaDTO": {
        "type": "object",
        "properties": {
          "materiaPrimaId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "categoria": {
            "type": "string",
            "nullable": true
          },
          "codInterno": {
            "type": "string",
            "nullable": true
          },
          "preco": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MateriaPrimaProdutoDTO": {
        "type": "object",
        "properties": {
          "materiaPrimaProdutoId": {
            "type": "integer",
            "format": "int32"
          },
          "quantidadeNec": {
            "type": "integer",
            "format": "int32"
          },
          "materiaPrimaMateriaPrimaId": {
            "type": "integer",
            "format": "int32"
          },
          "produtoProdutoId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrdemProducaoDTO": {
        "type": "object",
        "properties": {
          "ordemProdId": {
            "type": "integer",
            "format": "int32"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "integer",
            "format": "int32"
          },
          "dataAbertura": {
            "type": "string",
            "format": "date-time"
          },
          "dataConclusao": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maquinaMaquinaId": {
            "type": "integer",
            "format": "int32"
          },
          "encomendaClienteEncomendaClienteId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PedidoCompraDTO": {
        "type": "object",
        "properties": {
          "pedidoCompraId": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "dataAbertura": {
            "type": "string",
            "format": "date-time"
          },
          "dataConclusao": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nomeUtilizador": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO para leitura de pedidos de compra."
      },
      "PedidoManutençãoDTO": {
        "type": "object",
        "properties": {
          "pedidoManutId": {
            "type": "integer",
            "format": "int32"
          },
          "descicao": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "dataAbertura": {
            "type": "string",
            "format": "date-time"
          },
          "dataConclusao": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maquinaMaquinaId": {
            "type": "integer",
            "format": "int32"
          },
          "utilizadorUtilizadorId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProdMaterialDTO": {
        "type": "object",
        "properties": {
          "quantidadeUtilizada": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para apresentar os dados de matérias-primas usadas numa ordem de produção."
      },
      "ProdutoDTO": {
        "type": "object",
        "properties": {
          "produtoId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "codInterno": {
            "type": "string",
            "nullable": true
          },
          "preco": {
            "type": "number",
            "format": "double"
          },
          "ordemProducaoOrdemProdId": {
            "type": "integer",
            "format": "int32"
          },
          "encomendaItensEncomendaItensId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegistoManutencaoDTO": {
        "type": "object",
        "properties": {
          "registoManutencaoId": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "pedidoManutencaoPedidoManutId": {
            "type": "integer",
            "format": "int32"
          },
          "utilizadorUtilizadorId": {
            "type": "integer",
            "format": "int32"
          },
          "assistenciaExternaAssistenteId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegistoProducaoDTO": {
        "type": "object",
        "properties": {
          "registoProducaoId": {
            "type": "integer",
            "format": "int32"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "dataProducao": {
            "type": "string",
            "format": "date-time"
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "utilizadorUtilizadorId": {
            "type": "integer",
            "format": "int32"
          },
          "produtoProdutoId": {
            "type": "integer",
            "format": "int32"
          },
          "ordemProducaoOrdemProdId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UtilizadorDTO": {
        "type": "object",
        "properties": {
          "utilizadorId": {
            "type": "integer",
            "format": "int32"
          },
          "primeiroNome": {
            "type": "string",
            "nullable": true
          },
          "sobrenome": {
            "type": "string",
            "nullable": true
          },
          "numFuncionario": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "DTO para representar um utilizador sem informações sensíveis."
      },
      "UtilizadorUpdateAdminDTO": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "DTO usado para o administrador atualizar o estado e o perfil do utilizador."
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}