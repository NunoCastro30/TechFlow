{
  "openapi": "3.0.1",
  "info": {
    "title": "LogisControlAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/Cliente/ObterClientes": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtém a lista de todos os clientes registados.",
        "responses": {
          "200": {
            "description": "Retorna a lista de clientes com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClienteDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os clientes."
          }
        }
      }
    },
    "/api/Cliente/ObterCliente/{nif}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Obtém um cliente pelo seu NIF.",
        "parameters": [
          {
            "name": "nif",
            "in": "path",
            "description": "Número de Identificação Fiscal (NIF) do cliente.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteDTO"
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar o cliente."
          }
        }
      }
    },
    "/api/Cliente/CriarCliente": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cria um novo pedido de compra.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarClienteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarClienteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarClienteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Pedido de compra criado com sucesso."
          },
          "400": {
            "description": "Utilizador não encontrado ou dados inválidos."
          },
          "500": {
            "description": "Erro interno ao criar o pedido de compra."
          }
        }
      }
    },
    "/api/Cliente/AtualizarCliente/{clienteId}": {
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Atualiza os dados de um cliente existente.",
        "parameters": [
          {
            "name": "clienteId",
            "in": "path",
            "description": "ID do cliente a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do cliente.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarClienteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarClienteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarClienteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso."
          },
          "404": {
            "description": "Cliente não encontrado."
          },
          "400": {
            "description": "NIF duplicado ou dados inválidos."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o cliente."
          }
        }
      }
    },
    "/api/EncomendaCliente/ListarEncomendas": {
      "get": {
        "tags": [
          "EncomendaCliente"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaClienteDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaClienteDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EncomendaClienteDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Fornecedor/ObterFornecedores": {
      "get": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Obtém a lista de todos os fornecedores registados.",
        "responses": {
          "200": {
            "description": "Retorna a lista de fornecedores com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno ao tentar obter os fornecedores."
          }
        }
      }
    },
    "/api/Fornecedor/ObterFornecedorPorNome/{nome}": {
      "get": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Obtém fornecedores pelo nome (pesquisa parcial ou total).",
        "parameters": [
          {
            "name": "nome",
            "in": "path",
            "description": "Nome ou parte do nome do fornecedor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedores encontrados com sucesso.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum fornecedor encontrado."
          },
          "500": {
            "description": "Erro interno ao procurar fornecedores."
          }
        }
      }
    },
    "/api/Fornecedor/CriarFornecedor": {
      "post": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Cria um novo fornecedor na base de dados.",
        "requestBody": {
          "description": "Objeto com os dados do fornecedor a criar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarFornecedorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarFornecedorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarFornecedorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Fornecedor criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "500": {
            "description": "Erro interno ao tentar criar o fornecedor."
          }
        }
      }
    },
    "/api/Fornecedor/AtualizarFornecedor/{fornecedorId}": {
      "put": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Atualiza os dados de um fornecedor existente.",
        "parameters": [
          {
            "name": "fornecedorId",
            "in": "path",
            "description": "ID do fornecedor a atualizar.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do fornecedor.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarFornecedorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarFornecedorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AtualizarFornecedorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fornecedor atualizado com sucesso."
          },
          "404": {
            "description": "Fornecedor não encontrado."
          },
          "500": {
            "description": "Erro interno ao tentar atualizar o fornecedor."
          }
        }
      }
    },
    "/api/PedidoCompra/CriarPedidoCompra": {
      "post": {
        "tags": [
          "PedidoCompra"
        ],
        "summary": "Cria um novo pedido de compra.",
        "requestBody": {
          "description": "Dados para criação do pedido.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoCompraDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoCompraDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarPedidoCompraDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Pedido de compra criado com sucesso."
          },
          "400": {
            "description": "Utilizador não encontrado ou dados inválidos."
          },
          "500": {
            "description": "Erro interno ao criar o pedido de compra."
          }
        }
      }
    },
    "/api/Teste/ping": {
      "get": {
        "tags": [
          "Teste"
        ],
        "summary": "Endpoint para testar a conexão ao SQL Server.",
        "responses": {
          "200": {
            "description": "Conexão bem-sucedida com a BD."
          },
          "500": {
            "description": "Erro ao tentar conectar a BD."
          }
        }
      }
    },
    "/api/Utilizador": {
      "get": {
        "tags": [
          "Utilizador"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilizadorDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Utilizador/criar-utilizador": {
      "post": {
        "tags": [
          "Utilizador"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarUtilizadorDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriarUtilizadorDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CriarUtilizadorDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Utilizador/login": {
      "post": {
        "tags": [
          "Utilizador"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AtualizarClienteDTO": {
        "required": [
          "morada",
          "nif",
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          },
          "nif": {
            "type": "integer",
            "format": "int32"
          },
          "morada": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "DTO para atualização de dados de um cliente."
      },
      "AtualizarFornecedorDTO": {
        "required": [
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          },
          "telefone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para atualizar os dados de um fornecedor existente."
      },
      "ClienteDTO": {
        "type": "object",
        "properties": {
          "clienteId": {
            "type": "integer",
            "description": "Identificador único do cliente.",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "description": "Nome do cliente.",
            "nullable": true
          },
          "nif": {
            "type": "integer",
            "description": "Número de Identificação Fiscal (NIF) do cliente.",
            "format": "int32"
          },
          "morada": {
            "type": "string",
            "description": "Morada completa do cliente.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO que representa um cliente, contendo apenas informações essenciais e não sensíveis."
      },
      "CriarClienteDTO": {
        "required": [
          "morada",
          "nif",
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string",
            "description": "Nome do cliente."
          },
          "nif": {
            "type": "integer",
            "description": "Número de Identificação Fiscal do cliente.",
            "format": "int32"
          },
          "morada": {
            "minLength": 1,
            "type": "string",
            "description": "Morada do cliente."
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo cliente."
      },
      "CriarFornecedorDTO": {
        "required": [
          "nome"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "minLength": 1,
            "type": "string"
          },
          "telefone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo fornecedor."
      },
      "CriarPedidoCompraDTO": {
        "required": [
          "descricao",
          "utilizadorId"
        ],
        "type": "object",
        "properties": {
          "descricao": {
            "minLength": 1,
            "type": "string",
            "description": "Descrição do pedido de compra."
          },
          "utilizadorId": {
            "type": "integer",
            "description": "ID do utilizador que está a criar o pedido.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo pedido de compra."
      },
      "CriarUtilizadorDTO": {
        "required": [
          "numFuncionario",
          "password",
          "primeiroNome",
          "role",
          "sobrenome"
        ],
        "type": "object",
        "properties": {
          "primeiroNome": {
            "minLength": 1,
            "type": "string",
            "description": "Primeiro nome do utilizador."
          },
          "sobrenome": {
            "minLength": 1,
            "type": "string",
            "description": "Sobrenome ou apelido do utilizador."
          },
          "numFuncionario": {
            "type": "integer",
            "description": "Número único do funcionário (identificador interno).",
            "format": "int32"
          },
          "password": {
            "maxLength": 8,
            "minLength": 3,
            "type": "string",
            "description": "Palavra-passe do utilizador. Deve ter entre 3 e 8 caracteres."
          },
          "role": {
            "minLength": 1,
            "type": "string",
            "description": "Função atribuída ao utilizador (ex: Administrador, Operador, etc.)."
          }
        },
        "additionalProperties": false,
        "description": "DTO utilizado para criar um novo utilizador, contendo apenas os dados necessários para o registo."
      },
      "EncomendaClienteDTO": {
        "type": "object",
        "properties": {
          "encomendaClienteId": {
            "type": "integer",
            "format": "int32"
          },
          "dataEncomenda": {
            "type": "string",
            "format": "date-time"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "nomeCliente": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO para leitura de encomendas com nome do cliente."
      },
      "FornecedorDTO": {
        "type": "object",
        "properties": {
          "fornecedorId": {
            "type": "integer",
            "format": "int32"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO que representa um fornecedor para listagem/leitura."
      },
      "LoginDTO": {
        "required": [
          "numFuncionario",
          "password"
        ],
        "type": "object",
        "properties": {
          "numFuncionario": {
            "type": "integer",
            "format": "int32"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UtilizadorDTO": {
        "type": "object",
        "properties": {
          "utilizadorId": {
            "type": "integer",
            "format": "int32"
          },
          "primeiroNome": {
            "type": "string",
            "nullable": true
          },
          "sobrenome": {
            "type": "string",
            "nullable": true
          },
          "numFuncionario": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "DTO para representar um utilizador sem informações sensíveis."
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}