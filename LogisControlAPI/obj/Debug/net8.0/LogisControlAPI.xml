<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LogisControlAPI</name>
    </assembly>
    <members>
        <member name="T:LogisControlAPI.Controllers.AssistenciaExternaController">
            <summary>
            Controlador responsável pela gestão das assistências externas.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.AssistenciaExternaController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.AssistenciaExternaController.GetAssistencias">
            <summary>
            Obtém a lista de todas as assistências externas registadas.
            </summary>
            <returns>Lista de assistências externas.</returns>
            <response code="200">Retorna a lista com sucesso.</response>
            <response code="500">Erro interno ao tentar obter as assistências.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.AssistenciaExternaController.GetAssistenciaPorId(System.Int32)">
            <summary>
            Obtém uma assistência externa pelo seu ID.
            </summary>
            <param name="id">Identificador único da assistência.</param>
            <returns>Dados da assistência correspondente.</returns>
            <response code="200">Assistência encontrada com sucesso.</response>
            <response code="404">Assistência não encontrada.</response>
            <response code="500">Erro interno ao procurar a assistência.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.AssistenciaExternaController.CriarAssistencia(LogisControlAPI.DTO.AssistenciaExternaDTO)">
            <summary>
            Cria uma nova assistência externa.
            </summary>
            <param name="novaAssistenciaDto">Dados para criação da assistência.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Assistência criada com sucesso.</response>
            <response code="400">Dados inválidos ou duplicados.</response>
            <response code="500">Erro interno ao criar a assistência.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.AssistenciaExternaController.AtualizarAssistencia(System.Int32,LogisControlAPI.DTO.AssistenciaExternaDTO)">
            <summary>
            Atualiza os dados de uma assistência externa existente.
            </summary>
            <param name="assistenteId">ID da assistência a atualizar.</param>
            <param name="assistenciaAtualizada">Dados atualizados da assistência.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Assistência atualizada com sucesso.</response>
            <response code="404">Assistência não encontrada.</response>
            <response code="400">NIF duplicado ou dados inválidos.</response>
            <response code="500">Erro interno ao tentar atualizar a assistência.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.ClienteController">
            <summary>
            Controlador responsável pela gestão dos clientes.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.ClienteController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.ClienteController.GetClientes">
            <summary>
            Obtém a lista de todos os clientes registados.
            </summary>
            <returns>Lista de clientes sem encomendas associadas.</returns>
            <response code="200">Retorna a lista de clientes com sucesso.</response>
            <response code="500">Erro interno ao tentar obter os clientes.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ClienteController.GetClientePorNif(System.Int32)">
            <summary>
            Obtém um cliente pelo seu NIF.
            </summary>
            <param name="nif">Número de Identificação Fiscal (NIF) do cliente.</param>
            <returns>Dados do cliente correspondente.</returns>
            <response code="200">Cliente encontrado com sucesso.</response>
            <response code="404">Cliente não encontrado.</response>
            <response code="500">Erro interno ao procurar o cliente.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ClienteController.CriarCliente(LogisControlAPI.DTO.CriarClienteDTO)">
            <summary>
            Cria um novo cliente.
            </summary>
            <param name="dto">Dados para criação do pedido.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Cliente criado com sucesso.</response>
            <response code="500">Erro interno ao criar o pedido de compra.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ClienteController.AtualizarCliente(System.Int32,LogisControlAPI.DTO.AtualizarClienteDTO)">
            <summary>
            Atualiza os dados de um cliente existente.
            </summary>
            <param name="clienteId">ID do cliente a atualizar.</param>
            <param name="clienteAtualizado">Dados atualizados do cliente.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Cliente atualizado com sucesso.</response>
            <response code="404">Cliente não encontrado.</response>
            <response code="400">NIF duplicado ou dados inválidos.</response>
            <response code="500">Erro interno ao tentar atualizar o cliente.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.EncomendaClienteController">
            <summary>
            Controlador responsável pela gestão dos clientes.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaClienteController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaClienteController.ListarEncomendas">
            <summary>
            Lista encomendas
            </summary>
            <returns>Lista de encomendas.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro ao obter encomendas.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaClienteController.AtualizarEstado(System.Int32,LogisControlAPI.DTO.AtualizarEstadoEncomendaDTO)">
            <summary>
            Atualiza manualmente o estado de uma encomenda.
            </summary>
            <param name="id">ID da encomenda a atualizar.</param>
            <param name="dto">Novo estado da encomenda.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Estado atualizado com sucesso.</response>
            <response code="404">Encomenda não encontrada.</response>
            <response code="500">Erro interno ao atualizar o estado.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.EncomendaItensController">
            <summary>
            Controlador responsável pela gestão dos itens de encomenda.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaItensController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaItensController.GetEncomendaItens">
            <summary>
            Obtém a lista de todos os itens de encomenda registados.
            </summary>
            <returns>Lista de itens de encomenda.</returns>
            <response code="200">Retorna a lista com sucesso.</response>
            <response code="500">Erro interno ao tentar obter os itens.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaItensController.GetEncomendaItemPorId(System.Int32)">
            <summary>
            Obtém um item de encomenda pelo seu ID.
            </summary>
            <param name="id">Identificador único do item.</param>
            <returns>Dados do item de encomenda correspondente.</returns>
            <response code="200">Item encontrado com sucesso.</response>
            <response code="404">Item não encontrado.</response>
            <response code="500">Erro interno ao procurar o item.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaItensController.CriarEncomendaItem(LogisControlAPI.DTO.EncomendaItensDTO)">
            <summary>
            Cria um novo item de encomenda.
            </summary>
            <param name="novoItemDto">Dados para criação do item.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Item de encomenda criado com sucesso.</response>
            <response code="400">Dados inválidos.</response>
            <response code="500">Erro interno ao criar o item.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.EncomendaItensController.AtualizarEncomendaItem(System.Int32,LogisControlAPI.DTO.EncomendaItensDTO)">
            <summary>
            Atualiza os dados de um item de encomenda existente.
            </summary>
            <param name="itemId">ID do item a atualizar.</param>
            <param name="itemAtualizado">Dados atualizados do item.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Item atualizado com sucesso.</response>
            <response code="404">Item não encontrado.</response>
            <response code="500">Erro interno ao tentar atualizar o item.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.FornecedorController">
            <summary>
            Controlador responsável pela gestão dos fornecedores.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.FornecedorController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.FornecedorController.GetFornecedores">
            <summary>
            Obtém a lista de todos os fornecedores registados.
            </summary>
            <returns>Lista de fornecedores.</returns>
            <response code="200">Retorna a lista de fornecedores com sucesso.</response>
            <response code="500">Erro interno ao tentar obter os fornecedores.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.FornecedorController.GetFornecedorPorNome(System.String)">
            <summary>
            Obtém fornecedores pelo nome (pesquisa parcial ou total).
            </summary>
            <param name="nome">Nome ou parte do nome do fornecedor.</param>
            <returns>Lista de fornecedores que correspondem ao nome pesquisado.</returns>
            <response code="200">Fornecedores encontrados com sucesso.</response>
            <response code="404">Nenhum fornecedor encontrado.</response>
            <response code="500">Erro interno ao procurar fornecedores.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.FornecedorController.CriarFornecedor(LogisControlAPI.DTO.CriarFornecedorDTO)">
            <summary>
            Cria um novo fornecedor na base de dados.
            </summary>
            <param name="novoFornecedorDto">Objeto com os dados do fornecedor a criar.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Fornecedor criado com sucesso.</response>
            <response code="400">Dados inválidos.</response>
            <response code="500">Erro interno ao tentar criar o fornecedor.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.FornecedorController.AtualizarFornecedor(System.Int32,LogisControlAPI.DTO.AtualizarFornecedorDTO)">
            <summary>
            Atualiza os dados de um fornecedor existente.
            </summary>
            <param name="fornecedorId">ID do fornecedor a atualizar.</param>
            <param name="fornecedorAtualizado">Dados atualizados do fornecedor.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Fornecedor atualizado com sucesso.</response>
            <response code="404">Fornecedor não encontrado.</response>
            <response code="500">Erro interno ao tentar atualizar o fornecedor.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.LoginController">
            <summary>
            Controlador responsável pela autenticação dos utilizadores.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.LoginController.Login(LogisControlAPI.DTO.LoginDTO)">
            <summary>
            Autentica o utilizador e devolve um token JWT.
            </summary>
            <param name="loginDto">Credenciais do utilizador (nº funcionário e password).</param>
            <returns>Token JWT e dados do utilizador.</returns>
            <response code="200">Login efetuado com sucesso.</response>
            <response code="401">Número de funcionário ou password inválidos.</response>
            <response code="500">Erro interno ao efetuar login.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.MaquinaController">
            <summary>
            Controlador responsável pela gestão das máquinas.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.MaquinaController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.MaquinaController.GetMaquinas">
            <summary>
            Obtém a lista de todas as máquinas registadas.
            </summary>
            <returns>Lista de máquinas sem relações associadas.</returns>
            <response code="200">Retorna a lista de máquinas com sucesso.</response>
            <response code="500">Erro interno ao tentar obter as máquinas.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MaquinaController.GetMaquinaPorId(System.Int32)">
            <summary>
            Obtém uma máquina pelo seu ID.
            </summary>
            <param name="id">Identificador único da máquina.</param>
            <returns>Dados da máquina correspondente.</returns>
            <response code="200">Máquina encontrada com sucesso.</response>
            <response code="404">Máquina não encontrada.</response>
            <response code="500">Erro interno ao procurar a máquina.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MaquinaController.CriarMaquina(LogisControlAPI.DTO.MaquinaDTO)">
            <summary>
            Cria uma nova máquina.
            </summary>
            <param name="novaMaquinaDto">Dados para criação da máquina.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Máquina criada com sucesso.</response>
            <response code="400">Dados inválidos ou duplicados.</response>
            <response code="500">Erro interno ao criar a máquina.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MaquinaController.AtualizarMaquina(System.Int32,LogisControlAPI.DTO.MaquinaDTO)">
            <summary>
            Atualiza os dados de uma máquina existente.
            </summary>
            <param name="maquinaId">ID da máquina a atualizar.</param>
            <param name="maquinaAtualizada">Dados atualizados da máquina.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Máquina atualizada com sucesso.</response>
            <response code="404">Máquina não encontrada.</response>
            <response code="400">Dados inválidos ou duplicados.</response>
            <response code="500">Erro interno ao tentar atualizar a máquina.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.MateriaPrimaController">
            <summary>
            Controlador responsável pela gestão das matérias-primas.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaController.#ctor(LogisControlAPI.Data.LogisControlContext,LogisControlAPI.Services.StockService)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaController.GetMateriasPrimas">
            <summary>
            Lista todas as matérias-primas.
            </summary>
            <returns>Lista de matérias-primas.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro interno ao obter matérias-primas.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaController.GetMateriaPrima(System.Int32)">
            <summary>
            Obtém uma matéria-prima pelo ID.
            </summary>
            <param name="id">ID da matéria-prima.</param>
            <returns>Dados da matéria-prima.</returns>
            <response code="200">Matéria-prima encontrada.</response>
            <response code="404">Matéria-prima não encontrada.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaController.CreateMateriaPrima(LogisControlAPI.DTO.MateriaPrimaDTO)">
            <summary>
            Cria uma nova matéria-prima.
            </summary>
            <param name="materiaPrimaDTO">Dados da nova matéria-prima.</param>
            <returns>Matéria-prima criada.</returns>
            <response code="201">Matéria-prima criada com sucesso.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaController.UpdateMateriaPrima(System.Int32,LogisControlAPI.DTO.MateriaPrimaDTO)">
            <summary>
            Atualiza os dados de uma matéria-prima existente.
            </summary>
            <param name="id">ID da matéria-prima a ser atualizada.</param>
            <param name="materiaPrimaDTO">Novos dados da matéria-prima.</param>
            <returns>Resultado da atualização.</returns>
            <response code="204">Matéria-prima atualizada com sucesso.</response>
            <response code="404">Matéria-prima não encontrada.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaController.DeleteMateriaPrima(System.Int32)">
            <summary>
            Exclui uma matéria-prima pelo ID.
            </summary>
            <param name="id">ID da matéria-prima a ser excluída.</param>
            <returns>Resultado da exclusão.</returns>
            <response code="204">Matéria-prima excluída com sucesso.</response>
            <response code="404">Matéria-prima não encontrada.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.MateriaPrimaProdutoController">
            <summary>
            Controlador responsável pela relação entre matéria-prima e produtos.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaProdutoController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaProdutoController.GetAll">
            <summary>
            Lista todas as relações entre matéria-prima e produtos.
            </summary>
            <returns>Lista das relações.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro interno ao obter os registros.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaProdutoController.GetById(System.Int32)">
            <summary>
            Obtém uma relação entre matéria-prima e produto pelo ID.
            </summary>
            <param name="id">ID da relação.</param>
            <returns>Dados da relação.</returns>
            <response code="200">Relação encontrada.</response>
            <response code="404">Relação não encontrada.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaProdutoController.Create(LogisControlAPI.DTO.MateriaPrimaProdutoDTO)">
            <summary>
            Cria uma nova relação entre matéria-prima e produto.
            </summary>
            <param name="dto">Dados da nova relação.</param>
            <returns>Relação criada.</returns>
            <response code="201">Relação criada com sucesso.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaProdutoController.Update(System.Int32,LogisControlAPI.DTO.MateriaPrimaProdutoDTO)">
            <summary>
            Atualiza os dados de uma relação entre matéria-prima e produto existente.
            </summary>
            <param name="id">ID da relação a ser atualizada.</param>
            <param name="dto">Novos dados da relação.</param>
            <returns>Resultado da atualização.</returns>
            <response code="204">Relação atualizada com sucesso.</response>
            <response code="404">Relação não encontrada.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.MateriaPrimaProdutoController.Delete(System.Int32)">
            <summary>
            Exclui uma relação entre matéria-prima e produto pelo ID.
            </summary>
            <param name="id">ID da relação a ser excluída.</param>
            <returns>Resultado da exclusão.</returns>
            <response code="204">Relação excluída com sucesso.</response>
            <response code="404">Relação não encontrada.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.OrdemProducaoController">
            <summary>
            Controlador responsável pela gestão das ordens de produção.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.OrdemProducaoController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.OrdemProducaoController.GetAll">
            <summary>
            Obtém todas as ordens de produção.
            </summary>
            <returns>Lista de ordens de produção.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro ao obter as ordens de produção.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.OrdemProducaoController.GetById(System.Int32)">
            <summary>
            Obtém uma ordem de produção pelo ID.
            </summary>
            <param name="id">ID da ordem de produção.</param>
            <returns>Dados da ordem de produção.</returns>
            <response code="200">Ordem encontrada.</response>
            <response code="404">Ordem não encontrada.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.OrdemProducaoController.Create(LogisControlAPI.DTO.OrdemProducaoDTO)">
            <summary>
            Cria uma nova ordem de produção.
            </summary>
            <param name="dto">Dados da nova ordem.</param>
            <returns>Ordem criada.</returns>
            <response code="201">Ordem criada com sucesso.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.OrdemProducaoController.Update(System.Int32,LogisControlAPI.DTO.OrdemProducaoDTO)">
            <summary>
            Atualiza os dados de uma ordem de produção.
            </summary>
            <param name="id">ID da ordem a ser atualizada.</param>
            <param name="dto">Novos dados da ordem.</param>
            <returns>Sem conteúdo em caso de sucesso.</returns>
            <response code="204">Ordem atualizada com sucesso.</response>
            <response code="404">Ordem não encontrada.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.OrdemProducaoController.Delete(System.Int32)">
            <summary>
            Exclui uma ordem de produção pelo ID.
            </summary>
            <param name="id">ID da ordem a ser excluída.</param>
            <returns>Sem conteúdo em caso de sucesso.</returns>
            <response code="204">Ordem excluída com sucesso.</response>
            <response code="404">Ordem não encontrada.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.PedidoCompraController">
            <summary>
            Controlador responsável pela gestão dos pedidos de compra.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoCompraController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor que injeta o contexto da base de dados.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoCompraController.CriarPedidoCompra(LogisControlAPI.DTO.CriarPedidoCompraDTO)">
            <summary>
            Cria um novo pedido de compra.
            </summary>
            <param name="dto">Dados para criação do pedido.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Pedido de compra criado com sucesso.</response>
            <response code="400">Utilizador não encontrado ou dados inválidos.</response>
            <response code="500">Erro interno ao criar o pedido de compra.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoCompraController.ListarPedidosCompra">
            <summary>
            Lista todos os pedidos de compra com o nome do utilizador associado.
            </summary>
            <returns>Lista de pedidos de compra.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro ao obter os pedidos.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoCompraController.ListarPedidosCompraPorUtilizador">
            <summary>
            Lista os pedidos de compra do utilizador autenticado.
            </summary>
            <returns>Lista de pedidos de compra do utilizador.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="401">Utilizador não autenticado.</response>
            <response code="500">Erro ao obter os pedidos.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoCompraController.AtualizarEstadoPedido(System.Int32,LogisControlAPI.DTO.AtualizarEstadoPedidoDTO)">
            <summary>
            Atualiza o estado de um pedido de compra. Se o estado for "Concluído", define também a data de conclusão.
            </summary>
            <param name="pedidoId">ID do pedido a atualizar.</param>
            <param name="dto">Novo estado.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Estado atualizado com sucesso.</response>
            <response code="404">Pedido de compra não encontrado.</response>
            <response code="400">Dados inválidos.</response>
            <response code="500">Erro interno ao atualizar o estado.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoCompraController.AtualizarDescricao(System.Int32,LogisControlAPI.DTO.AtualizarDescricaoPedidoDTO)">
            <summary>
            Atualiza a descrição de um pedido de compra.
            </summary>
            <param name="pedidoId">ID do pedido.</param>
            <param name="dto">Nova descrição.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Descrição atualizada com sucesso.</response>
            <response code="404">Pedido não encontrado.</response>
            <response code="500">Erro interno.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.PedidoManutencaoController">
            <summary>
            Controlador responsável pela gestão dos pedidos de manutenção.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoManutencaoController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoManutencaoController.GetPedidos">
            <summary>
            Obtém a lista de todos os pedidos de manutenção registados.
            </summary>
            <returns>Lista de pedidos de manutenção.</returns>
            <response code="200">Retorna a lista de pedidos com sucesso.</response>
            <response code="500">Erro interno ao tentar obter os pedidos.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoManutencaoController.ListarPedidosManutencaoPorUtilizador">
            <summary>
            Lista os pedidos de manutenção do utilizador autenticado.
            </summary>
            <returns>Lista de pedidos de manutenção do utilizador.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="401">Utilizador não autenticado.</response>
            <response code="500">Erro ao obter os pedidos.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoManutencaoController.GetPedidoPorId(System.Int32)">
            <summary>
            Obtém um pedido de manutenção pelo seu ID.
            </summary>
            <param name="id">Identificador único do pedido.</param>
            <returns>Dados do pedido de manutenção correspondente.</returns>
            <response code="200">Pedido encontrado com sucesso.</response>
            <response code="404">Pedido não encontrado.</response>
            <response code="500">Erro interno ao procurar o pedido.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoManutencaoController.CriarPedido(LogisControlAPI.DTO.PedidoManutençãoDTO)">
            <summary>
            Cria um novo pedido de manutenção.
            </summary>
            <param name="novoPedidoDto">Dados para criação do pedido.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Pedido de manutenção criado com sucesso.</response>
            <response code="400">Dados inválidos.</response>
            <response code="500">Erro interno ao criar o pedido.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.PedidoManutencaoController.AtualizarPedido(System.Int32,LogisControlAPI.DTO.PedidoManutençãoDTO)">
            <summary>
            Atualiza os dados de um pedido de manutenção existente.
            </summary>
            <param name="pedidoId">ID do pedido a atualizar.</param>
            <param name="pedidoAtualizado">Dados atualizados do pedido.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Pedido atualizado com sucesso.</response>
            <response code="404">Pedido não encontrado.</response>
            <response code="500">Erro interno ao tentar atualizar o pedido.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.ProdMateriaisController">
            <summary>
            Controlador responsável por atualizar a quantidade de matérias-primas utilizadas numa ordem de produção.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdMateriaisController.AtualizarQuantidade(System.Int32,LogisControlAPI.DTO.ProdMaterialDTO)">
            <summary>
            Atualiza a quantidade utilizada de uma matéria-prima numa ordem de produção.
            </summary>
            <param name="id">ID do registo ProdMateriais.</param>
            <param name="dto">Nova quantidade a atualizar.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Quantidade atualizada com sucesso.</response>
            <response code="404">Registo não encontrado.</response>
            <response code="500">Erro interno ao atualizar o registo.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.ProdutoController">
            <summary>
            Controlador responsável pela gestão dos produtos.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdutoController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdutoController.GetAll">
            <summary>
            Lista todos os produtos.
            </summary>
            <returns>Lista de produtos.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro interno ao obter produtos.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdutoController.GetById(System.Int32)">
            <summary>
            Obtém um produto pelo ID.
            </summary>
            <param name="id">ID do produto.</param>
            <returns>Produto correspondente ao ID.</returns>
            <response code="200">Produto encontrado.</response>
            <response code="404">Produto não encontrado.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdutoController.Create(LogisControlAPI.DTO.ProdutoDTO)">
            <summary>
            Cria um novo produto.
            </summary>
            <param name="dto">Dados do produto a ser criado.</param>
            <returns>Produto criado.</returns>
            <response code="201">Produto criado com sucesso.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdutoController.Update(System.Int32,LogisControlAPI.DTO.ProdutoDTO)">
            <summary>
            Atualiza um produto existente.
            </summary>
            <param name="id">ID do produto a ser atualizado.</param>
            <param name="dto">Novos dados do produto.</param>
            <returns>Status da atualização.</returns>
            <response code="204">Produto atualizado com sucesso.</response>
            <response code="404">Produto não encontrado.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.ProdutoController.Delete(System.Int32)">
            <summary>
            Exclui um produto pelo ID.
            </summary>
            <param name="id">ID do produto a ser excluído.</param>
            <returns>Status da exclusão.</returns>
            <response code="204">Produto excluído com sucesso.</response>
            <response code="404">Produto não encontrado.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.RegistoManutencaoController">
            <summary>
            Controlador responsável pela gestão dos registos de manutenção.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoManutencaoController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoManutencaoController.GetRegistos">
            <summary>
            Obtém a lista de todos os registos de manutenção.
            </summary>
            <returns>Lista de registos de manutenção.</returns>
            <response code="200">Retorna a lista de registos com sucesso.</response>
            <response code="500">Erro interno ao tentar obter os registos.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoManutencaoController.GetRegistoPorId(System.Int32)">
            <summary>
            Obtém um registo de manutenção pelo seu ID.
            </summary>
            <param name="id">Identificador único do registo.</param>
            <returns>Dados do registo correspondente.</returns>
            <response code="200">Registo encontrado com sucesso.</response>
            <response code="404">Registo não encontrado.</response>
            <response code="500">Erro interno ao procurar o registo.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoManutencaoController.CriarRegisto(LogisControlAPI.DTO.RegistoManutencaoDTO)">
            <summary>
            Cria um novo registo de manutenção.
            </summary>
            <param name="novoRegistoDto">Dados para criação do registo.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="201">Registo criado com sucesso.</response>
            <response code="400">Dados inválidos.</response>
            <response code="500">Erro interno ao criar o registo.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoManutencaoController.AtualizarRegisto(System.Int32,LogisControlAPI.DTO.RegistoManutencaoDTO)">
            <summary>
            Atualiza os dados de um registo de manutenção existente.
            </summary>
            <param name="registoId">ID do registo a atualizar.</param>
            <param name="registoAtualizado">Dados atualizados do registo.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Registo atualizado com sucesso.</response>
            <response code="404">Registo não encontrado.</response>
            <response code="500">Erro interno ao tentar atualizar o registo.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.RegistoProducaoController">
            <summary>
            Controlador responsável pela gestão dos registos de produção.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoProducaoController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor do controlador que injeta o contexto da base de dados.
            </summary>
            <param name="context">Instância do contexto da base de dados.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoProducaoController.GetAll">
            <summary>
            Obtém todos os registos de produção.
            </summary>
            <returns>Lista de registos de produção.</returns>
            <response code="200">Lista obtida com sucesso.</response>
            <response code="500">Erro ao obter os registos de produção.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoProducaoController.GetById(System.Int32)">
            <summary>
            Obtém um registo de produção pelo ID.
            </summary>
            <param name="id">ID do registo de produção.</param>
            <returns>Dados do registo de produção.</returns>
            <response code="200">Registo encontrado.</response>
            <response code="404">Registo não encontrado.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoProducaoController.Create(LogisControlAPI.DTO.RegistoProducaoDTO)">
            <summary>
            Cria um novo registo de produção.
            </summary>
            <param name="dto">Dados do novo registo de produção.</param>
            <returns>Registo criado.</returns>
            <response code="201">Registo criado com sucesso.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoProducaoController.Update(System.Int32,LogisControlAPI.DTO.RegistoProducaoDTO)">
            <summary>
            Atualiza os dados de um registo de produção.
            </summary>
            <param name="id">ID do registo a ser atualizado.</param>
            <param name="dto">Novos dados do registo de produção.</param>
            <returns>Sem conteúdo em caso de sucesso.</returns>
            <response code="204">Registo atualizado com sucesso.</response>
            <response code="404">Registo não encontrado.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.RegistoProducaoController.Delete(System.Int32)">
            <summary>
            Exclui um registo de produção pelo ID.
            </summary>
            <param name="id">ID do registo a ser excluído.</param>
            <returns>Sem conteúdo em caso de sucesso.</returns>
            <response code="204">Registo excluído com sucesso.</response>
            <response code="404">Registo não encontrado.</response>
        </member>
        <member name="T:LogisControlAPI.Controllers.TesteController">
            <summary>
            Controlador para testar a conectividade com a base de dados SQL Server.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Controllers.TesteController.#ctor(LogisControlAPI.Data.LogisControlContext)">
            <summary>
            Construtor que injeta o contexto da base de dados no controlador.
            </summary>
            <param name="context">Instância do AppDbContext para verificar a conexão com a BD.</param>
        </member>
        <member name="M:LogisControlAPI.Controllers.UtilizadorController.GetUtilizadores">
            <summary>
            Obtém a lista de todos os utilizadores registados.
            </summary>
            <returns>Lista de utilizadores com dados públicos (sem password).</returns>
            <response code="200">Lista de utilizadores obtida com sucesso.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.UtilizadorController.CriarUtilizador(LogisControlAPI.DTO.CriarUtilizadorDTO)">
            <summary>
            Cria um novo utilizador com os dados fornecidos.
            </summary>
            <param name="novoUtilizadorDto">Dados do novo utilizador.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Utilizador criado com sucesso.</response>
            <response code="400">Número de funcionário já existe.</response>
            <response code="500">Erro interno ao criar o utilizador.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.UtilizadorController.AtualizarPerfil(LogisControlAPI.DTO.UtilizadorUpdateDTO)">
            <summary>
            Atualiza o primeiro nome, sobrenome e/ou password do utilizador autenticado.
            Apenas os campos preenchidos serão alterados.
            </summary>
            <param name="dto">Dados do utilizador a atualizar.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Perfil atualizado com sucesso.</response>
            <response code="401">Utilizador não identificado (token inválido).</response>
            <response code="404">Utilizador não encontrado.</response>
            <response code="500">Erro interno ao atualizar o perfil.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.UtilizadorController.ObterPerfil">
            <summary>
            Obtém os dados do perfil do utilizador autenticado.
            </summary>
            <returns>Dados do utilizador autenticado.</returns>
            <response code="200">Perfil obtido com sucesso.</response>
            <response code="401">Token inválido ou ID não encontrado nas claims.</response>
            <response code="404">Utilizador não encontrado.</response>
            <response code="500">Erro interno ao obter perfil.</response>
        </member>
        <member name="M:LogisControlAPI.Controllers.UtilizadorController.AtualizarEstadoRole(System.Int32,LogisControlAPI.DTO.UtilizadorUpdateAdminDTO)">
            <summary>
            Atualiza o estado e o perfil (role) de um utilizador. Apenas usado por administradores.
            </summary>
            <param name="id">ID do utilizador a atualizar.</param>
            <param name="dto">Novo role e estado.</param>
            <returns>Mensagem de sucesso ou erro.</returns>
            <response code="200">Utilizador atualizado com sucesso.</response>
            <response code="404">Utilizador não encontrado.</response>
            <response code="500">Erro interno ao atualizar o utilizador.</response>
        </member>
        <member name="T:LogisControlAPI.DTO.AtualizarEstadoEncomendaDTO">
            <summary>
            DTO utilizado para atualizar o estado de uma encomenda.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.AtualizarEstadoEncomendaDTO.Estado">
            <summary>
            Novo estado da encomenda.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.ClienteDTO">
            <summary>
            DTO que representa um cliente, contendo apenas informações essenciais e não sensíveis.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ClienteDTO.ClienteId">
            <summary>
            Identificador único do cliente.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ClienteDTO.Nome">
            <summary>
            Nome do cliente.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ClienteDTO.Nif">
            <summary>
            Número de Identificação Fiscal (NIF) do cliente.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ClienteDTO.Morada">
            <summary>
            Morada completa do cliente.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.CriarClienteDTO">
            <summary>
            DTO utilizado para criar um novo cliente.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarClienteDTO.Nome">
            <summary>
            Nome do cliente.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarClienteDTO.Nif">
            <summary>
            Número de Identificação Fiscal do cliente.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarClienteDTO.Morada">
            <summary>
            Morada do cliente.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.CriarFornecedorDTO">
            <summary>
            DTO utilizado para criar um novo fornecedor.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.CriarPedidoCompraDTO">
            <summary>
            DTO utilizado para criar um novo pedido de compra.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarPedidoCompraDTO.Descricao">
            <summary>
            Descrição do pedido de compra.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.CriarProdMaterialDTO">
            <summary>
            DTO utilizado para criar uma associação entre matéria-prima e ordem de produção.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.CriarUtilizadorDTO">
            <summary>
            DTO utilizado para criar um novo utilizador, contendo apenas os dados necessários para o registo.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarUtilizadorDTO.PrimeiroNome">
            <summary>
            Primeiro nome do utilizador.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarUtilizadorDTO.Sobrenome">
            <summary>
            Sobrenome ou apelido do utilizador.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarUtilizadorDTO.NumFuncionario">
            <summary>
            Número único do funcionário (identificador interno).
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarUtilizadorDTO.Password">
            <summary>
            Palavra-passe do utilizador. Deve ter entre 3 e 8 caracteres.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.CriarUtilizadorDTO.Role">
            <summary>
            Função atribuída ao utilizador (ex: Administrador, Operador, etc.).
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.AtualizarClienteDTO">
            <summary>
            DTO para atualização de dados de um cliente.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.AtualizarFornecedorDTO">
            <summary>
            DTO utilizado para atualizar os dados de um fornecedor existente.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.EncomendaClienteDTO">
            <summary>
            DTO para leitura de encomendas com nome do cliente.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.FornecedorDTO">
            <summary>
            DTO que representa um fornecedor para listagem/leitura.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.PedidoCompraDTO">
            <summary>
            DTO para leitura de pedidos de compra.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.ProdMaterialDTO">
            <summary>
            DTO utilizado para apresentar os dados de matérias-primas usadas numa ordem de produção.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ProdMaterialListar.ProdMateriaisId">
            <summary>
            ID do registo na tabela ProdMateriais.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ProdMaterialListar.MateriaPrimaNome">
            <summary>
            Nome da matéria-prima utilizada.
            </summary>
        </member>
        <member name="P:LogisControlAPI.DTO.ProdMaterialListar.QuantidadeUtilizada">
            <summary>
            Quantidade da matéria-prima utilizada.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.UtilizadorDTO">
            <summary>
            DTO para representar um utilizador sem informações sensíveis.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.UtilizadorUpdateAdminDTO">
            <summary>
            DTO usado para o administrador atualizar o estado e o perfil do utilizador.
            </summary>
        </member>
        <member name="T:LogisControlAPI.DTO.UtilizadorUpdateDTO">
            <summary>
            DTO para atualizar o perfil do utilizador (dados pessoais + password).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:LogisControlAPI.Services.AuthService.GenerateClaims(System.Int32,System.Int32,System.String)" -->
        <member name="T:LogisControlAPI.Services.NotificationService">
            <summary>
            Serviço responsável por enviar notificações por email.
            Utiliza a abstração IEmailSender, permitindo flexibilidade na implementação.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Services.NotificationService.NotificarAsync(System.String,System.String,System.String)">
            <summary>
            Envia uma notificação por email.
            </summary>
            <param name="destinatario">Endereço de email do destinatário.</param>
            <param name="assunto">Assunto do email.</param>
            <param name="mensagem">Corpo da mensagem.</param>
        </member>
        <member name="T:LogisControlAPI.Services.StockService">
            <summary>
            Serviço responsável por verificar o stock de matérias-primas e emitir alertas se necessário.
            </summary>
        </member>
        <member name="F:LogisControlAPI.Services.StockService.EmailResponsavelStock">
            <summary>
            Email fixo (temporário) do responsável de stock.
            </summary>
        </member>
        <member name="M:LogisControlAPI.Services.StockService.#ctor(LogisControlAPI.Data.LogisControlContext,LogisControlAPI.Services.NotificationService)">
            <summary>
            Construtor que injeta as dependências necessárias.
            </summary>
            <param name="context">Contexto da base de dados.</param>
            <param name="notificador">Serviço de notificações.</param>
        </member>
        <member name="M:LogisControlAPI.Services.StockService.VerificarStockCritico(System.Int32)">
            <summary>
            Verifica se a quantidade de uma matéria-prima está abaixo do limite crítico (5 unidades) e envia um alerta se necessário.
            </summary>
            <param name="materiaPrimaId">ID da matéria-prima a verificar.</param>
            <returns>Uma tarefa assíncrona.</returns>
        </member>
    </members>
</doc>
